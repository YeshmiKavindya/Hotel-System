-- 1. Customers Table (to store customer details)
CREATE TABLE Customers (
    CustomerID INT AUTO_INCREMENT PRIMARY KEY,  -- Unique Customer ID
    FirstName VARCHAR(100) NOT NULL,            -- First name of the customer
    LastName VARCHAR(100) NOT NULL,             -- Last name of the customer
    Email VARCHAR(100) NOT NULL,                -- Customer's email
    PhoneNumber VARCHAR(20),                    -- Customer's phone number
    Address VARCHAR(255)                        -- Customer's address
);

-- 2. Rooms Table (to store hotel room details)
CREATE TABLE Rooms (
    RoomID INT AUTO_INCREMENT PRIMARY KEY,      -- Unique Room ID
    RoomType VARCHAR(50) NOT NULL,               -- Type of room (e.g., Single, Double)
    PricePerNight DECIMAL(10, 2) NOT NULL,       -- Price per night for the room
    Capacity INT NOT NULL,                      -- Maximum capacity of the room
    Status VARCHAR(20) DEFAULT 'Available'      -- Room status (Available, Occupied, Reserved)
);

-- 3. Room Reservations Table (to store room reservation details)
CREATE TABLE RoomReservations (
    ReservationID INT AUTO_INCREMENT PRIMARY KEY,  -- Unique Reservation ID
    CustomerID INT NOT NULL,                       -- Customer who made the reservation
    RoomID INT NOT NULL,                           -- Room being reserved
    CheckInDate DATE NOT NULL,                     -- Check-in date
    CheckOutDate DATE NOT NULL,                    -- Check-out date
    TotalAmount DECIMAL(10, 2) NOT NULL,           -- Total amount for the stay
    PaymentStatus VARCHAR(20) DEFAULT 'Unpaid',    -- Payment status (Paid, Unpaid)
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),  -- Linking to Customers table
    FOREIGN KEY (RoomID) REFERENCES Rooms(RoomID)                  -- Linking to Rooms table
);

-- 4. Restaurant Tables Table (to store details about restaurant tables)
CREATE TABLE RestaurantTables (
    TableID INT AUTO_INCREMENT PRIMARY KEY,       -- Unique Table ID
    TableNumber INT NOT NULL,                     -- Table number (identifier)
    SeatingCapacity INT NOT NULL,                 -- Number of people the table can seat
    Location VARCHAR(50),                         -- Location of the table (e.g., "Window side")
    Status VARCHAR(20) DEFAULT 'Available'        -- Status of the table (Available, Occupied, Reserved)
);

-- 5. Restaurant Reservations Table (to store restaurant reservations)
CREATE TABLE RestaurantReservations (
    ReservationID INT AUTO_INCREMENT PRIMARY KEY,  -- Unique Reservation ID
    CustomerID INT NOT NULL,                       -- Customer making the reservation
    TableID INT NOT NULL,                          -- Table being reserved
    ReservationDate DATETIME NOT NULL,             -- Date and time of the reservation
    NumberOfGuests INT NOT NULL,                   -- Number of guests for the reservation
    SpecialRequests TEXT,                          -- Special requests (e.g., dietary, seating preferences)
    Status VARCHAR(20) DEFAULT 'Pending',          -- Status of the reservation (Pending, Confirmed, Cancelled)
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),  -- Reference to Customers table
    FOREIGN KEY (TableID) REFERENCES RestaurantTables(TableID)  -- Reference to RestaurantTables table
);

-- 6. Payments Table (to store payment details for room and restaurant reservations)
CREATE TABLE Payments (
    PaymentID INT AUTO_INCREMENT PRIMARY KEY,    -- Unique Payment ID
    ReservationID INT NOT NULL,                   -- Reservation associated with the payment (either room or restaurant)
    PaymentDate DATETIME NOT NULL,                 -- Date of payment
    Amount DECIMAL(10, 2) NOT NULL,                -- Amount paid
    PaymentMethod VARCHAR(50),                     -- Method of payment (Credit Card, Cash, etc.)
    PaymentStatus VARCHAR(20) DEFAULT 'Completed', -- Payment status (Completed, Pending, Failed)
    FOREIGN KEY (ReservationID) REFERENCES RoomReservations(ReservationID)  -- Linking to room reservations
        ON DELETE CASCADE
);

-- 7. Users Table (to store user details for authentication)
CREATE TABLE Users (
    UserID INT AUTO_INCREMENT PRIMARY KEY,          -- Unique User ID
    Username VARCHAR(50) NOT NULL UNIQUE,           -- Username for the user (e.g., admin, manager)
    PasswordHash VARCHAR(255) NOT NULL,              -- Hashed password (never store plain text passwords)
    Role VARCHAR(20) DEFAULT 'Guest'                -- Role of the user (Admin, Manager, Guest, etc.)
);

-- Sample Insert Queries

-- 8. Inserting Sample Customers
INSERT INTO Customers (FirstName, LastName, Email, PhoneNumber, Address)
VALUES
('John', 'Doe', 'john.doe@example.com', '123-456-7890', '123 Elm St, Springfield, IL'),
('Jane', 'Smith', 'jane.smith@example.com', '234-567-8901', '456 Oak Ave, Chicago, IL');

-- 9. Inserting Sample Rooms
INSERT INTO Rooms (RoomType, PricePerNight, Capacity)
VALUES
('Single', 100.00, 1),
('Double', 150.00, 2),
('Suite', 250.00, 4);

-- 10. Inserting Sample Restaurant Tables
INSERT INTO RestaurantTables (TableNumber, SeatingCapacity, Location, Status)
VALUES
(1, 2, 'Window side', 'Available'),
(2, 4, 'Near the bar', 'Reserved'),
(3, 6, 'Private room', 'Available');

-- 11. Inserting Room Reservations
INSERT INTO RoomReservations (CustomerID, RoomID, CheckInDate, CheckOutDate, TotalAmount, PaymentStatus)
VALUES
(1, 2, '2025-01-10', '2025-01-12', 300.00, 'Unpaid'),
(2, 3, '2025-01-15', '2025-01-18', 750.00, 'Paid');

-- 12. Inserting Restaurant Reservations
INSERT INTO RestaurantReservations (CustomerID, TableID, ReservationDate, NumberOfGuests, SpecialRequests, Status)
VALUES
(1, 1, '2025-01-10 19:00:00', 2, 'Window seat, vegetarian meal', 'Confirmed'),
(2, 2, '2025-01-12 20:00:00', 4, 'None', 'Pending');

-- 13. Inserting Payments
INSERT INTO Payments (ReservationID, PaymentDate, Amount, PaymentMethod, PaymentStatus)
VALUES
(1, '2025-01-10 18:00:00', 300.00, 'Credit Card', 'Completed'),
(2, '2025-01-15 12:00:00', 750.00, 'Cash', 'Completed');

-- 14. Inserting Sample Users (hashed passwords, use bcrypt or another secure method for hashing)
INSERT INTO Users (Username, PasswordHash, Role)
VALUES
('admin', '$2y$10$7e8a2d839db3be9ad7882b41b4d43b282bda4e3a40219bc88d92fyYtV3jxsq', 'Admin'),  -- 'admin' hashed using bcrypt
('manager', '$2y$10$56f75c7d5e3f6b52cb68c3fb29d02d422fc27997a43dbf98e76018YSFG7njs', 'Manager'),  -- 'manager' hashed using bcrypt
('guest', '$2y$10$12456x8f74db98d902fdb3e5e8f378ed5678e2356bb8f8709a209bzHFGXcZYj', 'Guest');  -- 'guest' hashed using bcrypt

-- 1. ContactDetails Table (to store customer contact inquiries)
CREATE TABLE ContactDetails (
    ContactID INT AUTO_INCREMENT PRIMARY KEY,  -- Unique Contact ID
    FullName VARCHAR(200) NOT NULL,            -- Full name of the person contacting (First & Last Name combined)
    Email VARCHAR(100) NOT NULL,               -- Email address of the person contacting
    Message TEXT NOT NULL,                     -- Message sent by the person contacting
    ContactDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- Date and time the contact was made
);


"A vibrant bowl of fresh fruit salad": A colorful assortment of ripe strawberries, blueberries, pineapple chunks, kiwi slices, and orange wedges, topped with a drizzle of honey and fresh mint leaves. The fruit glistens under soft natural light, making it look refreshing and healthy.

"Classic Margherita pizza": A close-up of a crispy, golden-brown pizza crust topped with fresh mozzarella cheese, ripe tomatoes, basil leaves, and a drizzle of olive oil. The melted cheese bubbles on top, and the red, green, and white colors create a visually stunning dish.

"Decadent chocolate cake slice": A moist and rich slice of chocolate cake with smooth chocolate ganache, topped with a few raspberries and a dusting of powdered sugar. The layers inside are perfect and tempting, ready to melt in your mouth.

"Sushi platter with assorted rolls": A neatly arranged sushi platter with various sushi rolls, including California rolls, spicy tuna, and salmon nigiri, garnished with wasabi, pickled ginger, and edible flowers. The vibrant colors of the sushi contrast against the white plate.

"Comforting bowl of ramen": A steaming bowl of ramen noodles in a rich broth, topped with tender slices of pork, soft-boiled eggs, green onions, and a sprinkle of sesame seeds. The bowl radiates warmth and comfort, with steam gently rising from it.

"Colorful summer salad": A bowl filled with fresh greens, cherry tomatoes, cucumbers, avocados, and crumbled feta cheese, topped with a balsamic glaze. The bright colors of the vegetables make the salad look both healthy and inviting.

"Refreshing tropical cocktail": A vibrant, ice-cold tropical cocktail served in a tall glass with a mix of pineapple, mango, and coconut, garnished with a pineapple slice and a cocktail umbrella. The drink looks like the perfect refreshment for a sunny day by the beach.

"Hearty breakfast spread": A plate piled high with scrambled eggs, crispy bacon, golden pancakes with syrup, buttered toast, and fresh fruit. A glass of orange juice completes the meal, ready for a perfect start to the day.

"Bowl of creamy mashed potatoes": A perfectly whipped bowl of mashed potatoes topped with a pat of butter, sprinkled with chives, and served with a side of gravy. The smooth texture of the mashed potatoes is comforting and indulgent.

"Gourmet burger with all the toppings": A juicy, perfectly grilled beef patty stacked with melted cheese, crisp lettuce, juicy tomato, pickles, and a dollop of sauce. The burger is served on a soft, golden bun, with golden fries on the side.

"Grilled seafood platter": A platter featuring an assortment of grilled seafood like shrimp, scallops, and lobster tails, all garnished with lemon wedges and a sprinkle of herbs. The seafood is perfectly charred, adding flavor and texture.

"Freshly baked croissants": A basket of buttery, flaky croissants fresh out of the oven, with their golden crust and soft, airy center. The pastries are arranged on a rustic napkin, ready to be enjoyed with a cup of coffee.

"Vegetable stir-fry with rice": A vibrant stir-fry of mixed vegetables like bell peppers, broccoli, carrots, and snap peas, tossed in a savory sauce and served with fluffy white rice. The colors of the vegetables pop against the rice, creating an appetizing dish.

"Delicious taco platter": A plate of soft corn tortillas filled with seasoned ground beef, shredded lettuce, diced tomatoes, cheese, and sour cream, served with a side of guacamole and salsa. The vibrant toppings make the tacos look fresh and tasty.

"Sweet berry cheesecake": A slice of creamy cheesecake topped with a medley of fresh berries like strawberries, blueberries, and raspberries. The creamy filling contrasts with the tangy berries, and the golden graham cracker crust adds texture.

"Classic spaghetti with marinara sauce": A heaping plate of spaghetti noodles twirled into a perfect mound, topped with rich marinara sauce, fresh basil, and a sprinkle of parmesan cheese. The dish is garnished with a side of garlic bread, making it a classic, comforting meal.